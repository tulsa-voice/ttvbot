// Helper Mixins
// =================================================================================

// Mixin for selection markup
// ------------------
@mixin selection($background, $color, $element:false) {
	@if($element) {
		&::-moz-selection{ background:$background; color:$color; text-shadow:none; }
		&::selection { background:$background; color:$color; text-shadow:none; }
	} @else {
		::-moz-selection{ background:$background; color:$color; text-shadow:none; }
		::selection { background:$background; color:$color; text-shadow:none; }
	}
}

// PRECISE CONTROL OVER RESPONSIVE TYPOGRAPHY FOR SASS
// ---------------------------------------------------------------------------
// Indrek Paas @indrekpaas

// Inspired by Mike Riethmuller's Precise control over responsive typography
// http://madebymike.com.au/writing/precise-control-responsive-typography/

// `strip-unit()` function by Hugo Giraudel

// 02.10.2015 Add support for multiple properties
// ---------------------------------------------------------------------------
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
    & {
        @each $property in $properties {
            #{$property}: $min-value;
        }

        @media screen and (min-width: $min-vw) {
            @each $property in $properties {
                #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
        }

        @media screen and (min-width: $max-vw) {
            @each $property in $properties {
                #{$property}: $max-value;
            }
        }
    }
}

// USAGE:
// // Single property
// html {
//     @include fluid-type(font-size, 320px, 1366px, 14px, 18px);
// }

// // Multiple properties with same values
// h1 {
//     @include fluid-type(font-size margin-bottom, 320px, 1366px, 14px, 18px);
// }

// // Multiple properties with different values
// div {
//     @include fluid-type(padding, 320px, 1366px, 14px, 18px);
//     @include fluid-type(width, 20em, 100em, 8em, 16em);
// }
